CREATE TABLE "ACCOUNT"(
    ACCOUNTNUMBER NUMBER UNIQUE,
    BALANCE DECIMAL,
    PRIMARY KEY(ACCOUNTNUMBER)
);

CREATE TABLE USERTABLE(
    USERID NUMBER,
    FIRSTNAME VARCHAR2(30),
    LASTNAME VARCHAR2(30),
    ADDRESS VARCHAR2(50),
    CITY VARCHAR2(30),
    "STATE" VARCHAR2(30),
    PHONENUMBER VARCHAR2(30),
    USERNAME VARCHAR2(30) UNIQUE,
    USERPASS VARCHAR2(30),
    PRIMARY KEY(USERID)
);

CREATE TABLE ADMINISTRATOR(
    ADMINID NUMBER,
    FIRSTNAME VARCHAR2(30),
    LASTNAME VARCHAR2(30),
    ADMINUSERNAME VARCHAR2(30),
    ADMINPASS VARCHAR2(30),
    PRIMARY KEY(ADMINID)
);

INSERT INTO ADMINISTRATOR VALUES(1, 'Kyle', 'Kolstad', 'admin','revature');

ALTER TABLE USERTABLE
ADD ACCOUNTNUMBER NUMBER;

ALTER TABLE USERTABLE
ADD CONSTRAINT USERFKID
FOREIGN KEY(ACCOUNTNUMBER) REFERENCES "ACCOUNT"(ACCOUNTNUMBER);

CREATE SEQUENCE USERSEQ;
CREATE SEQUENCE ADMINSEQ;

CREATE SEQUENCE ACCOUNTNUMBERSEQ
MINVALUE 1000
MAXVALUE 1999
START WITH 1000
INCREMENT BY 1
CACHE 20;

CREATE OR REPLACE PROCEDURE NEW_USER
(USERNAME VARCHAR2, "PASSWORD" VARCHAR2, FIRSTNAME VARCHAR2, LASTNAME VARCHAR2, ADDRESS VARCHAR2, CITY VARCHAR2, "STATE" VARCHAR2, PHONENUMBER VARCHAR2)
AS
BEGIN
INSERT INTO "ACCOUNT" VALUES(ACCOUNTNUMBERSEQ.NEXTVAL, 500);
INSERT INTO USERTABLE VALUES(USERSEQ.NEXTVAL, FIRSTNAME, LASTNAME, ADDRESS, CITY, "STATE", PHONENUMBER, USERNAME, "PASSWORD", ACCOUNTNUMBERSEQ.CURRVAL);
COMMIT;
END;
/


CREATE OR REPLACE PROCEDURE DELETE_USER
(ACCTNUMBER NUMBER)
AS
BEGIN
DELETE FROM USERTABLE WHERE ACCOUNTNUMBER=ACCTNUMBER;
DELETE FROM "ACCOUNT" WHERE ACCOUNTNUMBER=ACCTNUMBER;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE DELETE_ACCOUNT
(ACCTNUMBER NUMBER)
AS
BEGIN
DELETE FROM "ACCOUNT" WHERE ACCOUNTNUMBER=ACCTNUMBER;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE DEPOSIT
(ACCTNUMBER NUMBER, AMOUNT DECIMAL)
AS
BEGIN
UPDATE "ACCOUNT" 
SET BALANCE=(BALANCE+AMOUNT)
WHERE ACCOUNTNUMBER=ACCTNUMBER;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE WITHDRAW
(ACCTNUMBER NUMBER, AMOUNT DECIMAL)
AS
BEGIN
UPDATE "ACCOUNT" 
SET BALANCE=(BALANCE-AMOUNT)
WHERE ACCOUNTNUMBER=ACCTNUMBER;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE TRANSFER
(ACCTNUMBER NUMBER, AMOUNT DECIMAL, TRANSACCT NUMBER)
AS
BEGIN
UPDATE "ACCOUNT" 
SET BALANCE=(BALANCE-AMOUNT)
WHERE ACCOUNTNUMBER=ACCTNUMBER;
UPDATE "ACCOUNT" 
SET BALANCE=(BALANCE+AMOUNT)
WHERE ACCOUNTNUMBER=TRANSACCT;
COMMIT;
END;
/

CREATE OR REPLACE FUNCTION CHECK_BALANCE
(ACCTNUM IN NUMBER)
RETURN DECIMAL AS
TOTAL_BALANCE DECIMAL;
BEGIN
SELECT BALANCE INTO TOTAL_BALANCE
FROM "ACCOUNT" WHERE ACCOUNTNUMBER=ACCTNUM;
RETURN TOTAL_BALANCE;
END;
/
