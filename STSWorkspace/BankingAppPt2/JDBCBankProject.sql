/*DB Creation*/

CREATE SEQUENCE CUSTSEQ;
CREATE SEQUENCE ACCTSEQ;
CREATE SEQUENCE TRANSEQ;
CREATE SEQUENCE JOINSEQ;

DROP SEQUENCE CUSTSEQ;
DROP SEQUENCE ACCTSEQ;
DROP SEQUENCE TRANSEQ;
DROP SEQUENCE JOINSEQ;

CREATE TABLE BANKUSERS(
USER_ID NUMBER PRIMARY KEY,
USER_USERNAME VARCHAR2(30),
USER_PASSWORD VARCHAR2(30),
USER_FIRSTNAME VARCHAR2(30),
USER_LASTNAME VARCHAR2(30)
);

CREATE TABLE ACCOUNTS(
ACCT_ID NUMBER PRIMARY KEY,
ACCT_NAME VARCHAR2(100),
ACCT_FUNDS NUMBER(5, 2),
USER_ID NUMBER
);

CREATE TABLE BANK_TRANSACTION(
TRAN_ID NUMBER PRIMARY KEY,
TRAN_TYPE NUMBER,
TRAN_USER_ID NUMBER,
TRAN_ACCT_ID NUMBER,
TRAN_FUNDS NUMBER
);

CREATE TABLE BANK_TRANSACTION_TYPES(
TYPE_ID NUMBER PRIMARY KEY,
TYPE_NAME VARCHAR2(20)
);

ALTER TABLE ACCOUNTS
ADD CONSTRAINT FK_USER_ID
FOREIGN KEY(USER_ID) REFERENCES BANKUSERS(USER_ID);


ALTER TABLE BANK_TRANSACTION
ADD CONSTRAINT FK_TRAN_TYPE
FOREIGN KEY (TRAN_TYPE) REFERENCES BANK_TRANSACTION_TYPES(TYPE_ID);

COMMIT;

/*Stored Procedures*/

-----------------User Account Procedures------------------

CREATE OR REPLACE PROCEDURE CREATEUSERACCOUNT(UNAME IN VARCHAR2, PWORD IN VARCHAR2, FNAME IN VARCHAR2, LNAME IN VARCHAR2) IS
BEGIN
    INSERT INTO BANKUSERS VALUES(CUSTSEQ.NEXTVAL, UNAME, PWORD, FNAME, LNAME);
END;
/

CREATE OR REPLACE PROCEDURE UPDATEUSERACCOUNT(U_ID IN NUMBER, NEWVALUE IN VARCHAR2, CHOICE IN NUMBER) IS
BEGIN
    CASE
        WHEN CHOICE = 1 THEN UPDATE BANKUSERS SET USER_USERNAME = NEWVALUE WHERE USER_ID = U_ID;
        WHEN CHOICE = 2 THEN UPDATE BANKUSERS SET USER_PASSWORD = NEWVALUE WHERE USER_ID = U_ID;
        WHEN CHOICE = 3 THEN UPDATE BANKUSERS SET USER_FIRSTNAME = NEWVALUE WHERE USER_ID = U_ID;
        WHEN CHOICE = 4 THEN UPDATE BANKUSERS SET USER_LASTNAME = NEWVALUE WHERE USER_ID = U_ID;
    END CASE;
END;
/

CREATE OR REPLACE PROCEDURE DELETEUSERACCOUNT(USERID IN NUMBER) IS
BEGIN
    DELETE FROM BANKUSERS WHERE USER_ID = USERID;
END;
/

-----------------Bank Account Procedures------------------

CREATE OR REPLACE PROCEDURE CREATEBANKACCOUNT(U_ID IN NUMBER, ACCTNAME IN VARCHAR2, FUNDS IN NUMBER) IS
BEGIN
    INSERT INTO ACCOUNTS VALUES(ACCTSEQ.NEXTVAL, ACCTNAME, FUNDS, U_ID);
END;
/

CREATE OR REPLACE PROCEDURE WITHDRAW(ACCTID IN NUMBER, FUNDS IN NUMBER) IS
BEGIN
    UPDATE ACCOUNTS SET ACCT_FUNDS = ACCT_FUNDS - FUNDS WHERE ACCT_ID = ACCTID;
END;
/

CREATE OR REPLACE PROCEDURE DEPOSIT(ACCTID IN NUMBER, FUNDS IN NUMBER) IS
BEGIN
    UPDATE ACCOUNTS SET ACCT_FUNDS = ACCT_FUNDS + FUNDS WHERE ACCT_ID = ACCTID;
END;
/

CREATE OR REPLACE PROCEDURE DELETEBANKACCOUNT(ACCTID IN NUMBER) IS
BEGIN
    DELETE FROM ACCOUNTS WHERE ACCT_ID = ACCTID;
END;
/

-----------------Transaction Procedures------------------

CREATE OR REPLACE PROCEDURE CREATETRANSACTION(T_TYPE IN NUMBER, U_ID IN NUMBER, A_ID IN NUMBER, T_FUNDS IN NUMBER) IS
BEGIN
    INSERT INTO BANK_TRANSACTION VALUES(TRANSEQ.NEXTVAL, T_TYPE, U_ID, A_ID, T_FUNDS);
END;
/

SELECT ACCT_ID, ACCT_NAME, ACCT_FUNDS, USER_ID FROM ACCOUNTS;